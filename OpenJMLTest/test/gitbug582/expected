$SPECS/specs/java/util/Optional.jml:81: warning: A non-pure method is being called where it is not permitted: java.util.function.Function.apply(T)
  //@   ensures value != null ==> \result.value == f.apply(value);
                                                          ^
test/gitbug582/StudentSimple2_3.java:38: warning: A non-pure method is being called where it is not permitted: java.util.List.add(E)
    @            enrolments.equals(\old(enrolments).add(e));
                                                       ^
Proving methods in Simpler
Starting proof of Simpler.Simpler() with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of Simpler.Simpler() with prover !!!! - no warnings
Proving methods in Simpler.H
Starting proof of Simpler.H.H() with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of Simpler.H.H() with prover !!!! - no warnings
Starting proof of Simpler.H.has(java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of Simpler.H.has(java.lang.Object) with prover !!!! - no warnings
Starting proof of Simpler.H.take(java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of Simpler.H.take(java.lang.Object) with prover !!!! - no warnings
Completed proving methods in Simpler.H
Starting proof of Simpler.loop(Simpler.H,java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - before explicit assert statement : OK
Feasibility check #3 - at program exit : OK
Completed proof of Simpler.loop(Simpler.H,java.lang.Object) with prover !!!! - no warnings
Starting proof of Simpler.loop2(Simpler.H,java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - before explicit assert statement : OK
Feasibility check #3 - at program exit : OK
Completed proof of Simpler.loop2(Simpler.H,java.lang.Object) with prover !!!! - no warnings
Starting proof of Simpler.loop3(Simpler.H,java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - before explicit assert statement : OK
Feasibility check #3 - at program exit : OK
Completed proof of Simpler.loop3(Simpler.H,java.lang.Object) with prover !!!! - no warnings
Starting proof of Simpler.loop4(int[],Simpler.H,java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - after explicit assume statement : OK
Feasibility check #3 - before explicit assert statement : OK
Feasibility check #4 - at program exit : OK
Completed proof of Simpler.loop4(int[],Simpler.H,java.lang.Object) with prover !!!! - no warnings
Starting proof of Simpler.loop4(java.util.List<java.lang.Object>,Simpler.H,java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - after explicit assume statement : OK
Feasibility check #3 - before explicit assert statement : OK
Feasibility check #4 - at program exit : OK
Completed proof of Simpler.loop4(java.util.List<java.lang.Object>,Simpler.H,java.lang.Object) with prover !!!! - no warnings
Completed proving methods in Simpler
Proving methods in courseman.baderrs.StudentSimple2_3
Starting proof of courseman.baderrs.StudentSimple2_3.StudentSimple2_3() with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of courseman.baderrs.StudentSimple2_3.StudentSimple2_3() with prover !!!! - no warnings
Starting proof of courseman.baderrs.StudentSimple2_3.addEnrolment(java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of courseman.baderrs.StudentSimple2_3.addEnrolment(java.lang.Object) with prover !!!! - no warnings
Starting proof of courseman.baderrs.StudentSimple2_3.removeEnrolmentBad(java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of courseman.baderrs.StudentSimple2_3.removeEnrolmentBad(java.lang.Object) with prover !!!! - no warnings
Starting proof of courseman.baderrs.StudentSimple2_3.removeEnrolmentGood(java.lang.Object) with prover !!!!
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of courseman.baderrs.StudentSimple2_3.removeEnrolmentGood(java.lang.Object) with prover !!!! - no warnings
Completed proving methods in courseman.baderrs.StudentSimple2_3
2 warnings
