Proving methods in openjml.demo.Paths
Starting proof of openjml.demo.Paths.Paths() with prover z3_4_3
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of openjml.demo.Paths.Paths() with prover z3_4_3 - no warnings
Starting proof of openjml.demo.Paths.clip(int,int,int) with prover z3_4_3
Feasibility check #1 - end of preconditions : OK
Feasibility check #2 - at program exit : OK
Completed proof of openjml.demo.Paths.clip(int,int,int) with prover z3_4_3 - no warnings
Starting proof of openjml.demo.Paths.multipleErrors(int) with prover z3_4_3

TRACE of openjml.demo.Paths.multipleErrors(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:25:  	if (i == 0) ...
			VALUE: i	 === ( - 1 )
			VALUE: 0	 === 0
			VALUE: i == 0	 === false
			VALUE: (i == 0)	 === false
				Condition = false
..\OpenJMLDemo\src\openjml\demo\Paths.java:28:  	assert Assert i > 0;
			VALUE: i	 === ( - 1 )
			VALUE: 0	 === 0
			VALUE: i > 0	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:28: warning: The prover cannot establish an assertion (Assert) in method multipleErrors
			//@ assert i > 0;
			    ^

TRACE of openjml.demo.Paths.multipleErrors(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:25:  	if (i == 0) ...
			VALUE: i	 === 0
			VALUE: 0	 === 0
			VALUE: i == 0	 === true
			VALUE: (i == 0)	 === true
				Condition = true
..\OpenJMLDemo\src\openjml\demo\Paths.java:26:  	assert Assert i > 0;
			VALUE: i	 === 0
			VALUE: 0	 === 0
			VALUE: i > 0	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:26: warning: The prover cannot establish an assertion (Assert) in method multipleErrors
			//@ assert i > 0;
			    ^
Completed proof of openjml.demo.Paths.multipleErrors(int) with prover z3_4_3 - with warnings
Starting proof of openjml.demo.Paths.lotsOfPaths(int) with prover z3_4_3

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 2
			VALUE: (i)	 === 2
				Selection = 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	case 2:
			VALUE: 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	k = 2
			VALUE: 2	 === 2
			VALUE: k = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 2
			VALUE: k	 === 2
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 2
			VALUE: i += k	 === 4
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 1
			VALUE: (i)	 === 1
				Selection = 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	case 1:
			VALUE: 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	k = 1
			VALUE: 1	 === 1
			VALUE: k = 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 1
			VALUE: k	 === 1
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 1
			VALUE: i += k	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 2
			VALUE: (i)	 === 2
				Selection = 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	case 2:
			VALUE: 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	k = 2
			VALUE: 2	 === 2
			VALUE: k = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 2
			VALUE: k	 === 2
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 2
			VALUE: i += k	 === 4
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 2
			VALUE: (i)	 === 2
				Selection = 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	case 2:
			VALUE: 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	k = 2
			VALUE: 2	 === 2
			VALUE: k = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:37:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 2
			VALUE: k	 === 2
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:48:  	j = 2
			VALUE: 2	 === 2
			VALUE: j = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 2
			VALUE: i += k	 === 4
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 1
			VALUE: (i)	 === 1
				Selection = 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	case 1:
			VALUE: 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	k = 1
			VALUE: 1	 === 1
			VALUE: k = 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 1
			VALUE: k	 === 1
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 1
			VALUE: i += k	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 0
			VALUE: (i)	 === 0
				Selection = 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	default:
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	k = i
			VALUE: i	 === 0
			VALUE: k = i	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 0
			VALUE: k	 === 0
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 0
			VALUE: i += k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 3
			VALUE: (i)	 === 3
				Selection = 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	case 3:
			VALUE: 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	k = 3
			VALUE: 3	 === 3
			VALUE: k = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 3
			VALUE: k	 === 3
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 3
			VALUE: i += k	 === 6
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 1
			VALUE: (i)	 === 1
				Selection = 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	case 1:
			VALUE: 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	k = 1
			VALUE: 1	 === 1
			VALUE: k = 1	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:36:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 1
			VALUE: k	 === 1
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:48:  	j = 2
			VALUE: 2	 === 2
			VALUE: j = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 1
			VALUE: i += k	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 3
			VALUE: (i)	 === 3
				Selection = 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	case 3:
			VALUE: 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	k = 3
			VALUE: 3	 === 3
			VALUE: k = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 3
			VALUE: k	 === 3
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 3
			VALUE: i += k	 === 6
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 3
			VALUE: (i)	 === 3
				Selection = 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	case 3:
			VALUE: 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	k = 3
			VALUE: 3	 === 3
			VALUE: k = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:38:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 3
			VALUE: k	 === 3
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:48:  	j = 2
			VALUE: 2	 === 2
			VALUE: j = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 3
			VALUE: i += k	 === 6
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 4
			VALUE: (i)	 === 4
				Selection = 4
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	default:
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	k = i
			VALUE: i	 === 4
			VALUE: k = i	 === 4
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 4
			VALUE: k	 === 4
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	Exception thrown by Exception()
			VALUE: _JML___exceptionCall	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:48:  	j = 2
			VALUE: 2	 === 2
			VALUE: j = 2	 === 2
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 4
			VALUE: i += k	 === 8
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^

TRACE of openjml.demo.Paths.lotsOfPaths(int)

..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int k = 0
			VALUE: k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:33:  	int j = 1
			VALUE: j	 === 1
..\OpenJMLDemo\src\openjml\demo\Paths.java:34:  	switch (i) ...
			VALUE: i	 === 0
			VALUE: (i)	 === 0
				Selection = 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	default:
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	k = i
			VALUE: i	 === 0
			VALUE: k = i	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:35:  	break;
..\OpenJMLDemo\src\openjml\demo\Paths.java:40:  	assert Assert i == k;
			VALUE: i	 === 0
			VALUE: k	 === 0
			VALUE: i == k	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:43:  	throw new Exception();
			VALUE: new Exception()	 === REF!val!2
..\OpenJMLDemo\src\openjml\demo\Paths.java:50:  	j = 3
			VALUE: 3	 === 3
			VALUE: j = 3	 === 3
..\OpenJMLDemo\src\openjml\demo\Paths.java:52:  	i += k
			VALUE: k	 === 0
			VALUE: i += k	 === 0
..\OpenJMLDemo\src\openjml\demo\Paths.java:54:  	assert Assert false;
			VALUE: false	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:54: warning: The prover cannot establish an assertion (Assert) in method lotsOfPaths
		//@ assert false;
		    ^
Completed proof of openjml.demo.Paths.lotsOfPaths(int) with prover z3_4_3 - with warnings
Starting proof of openjml.demo.Paths.testConstant(java.lang.Object) with prover z3_4_3

TRACE of openjml.demo.Paths.testConstant(java.lang.Object)

..\OpenJMLDemo\src\openjml\demo\Paths.java:58:  	o = this
			VALUE: this	 === THIS
			VALUE: o = this	 === THIS
..\OpenJMLDemo\src\openjml\demo\Paths.java:59:  	assert Assert o == this;
			VALUE: o	 === THIS
			VALUE: this	 === THIS
			VALUE: o == this	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:60:  	o = new RuntimeException()
			VALUE: new RuntimeException()	 === REF!val!3
			VALUE: o = new RuntimeException()	 === REF!val!3
..\OpenJMLDemo\src\openjml\demo\Paths.java:  	assert Assert \typeof(o) <: \type(Exception);
			VALUE: o	 === REF!val!3
			VALUE: \typeof(o)	 === JMLT_java_lang_RuntimeException
			VALUE: \type(Exception)	 === JMLT_java_lang_Exception
			VALUE: \typeof(o) <: \type(Exception)	 === true
..\OpenJMLDemo\src\openjml\demo\Paths.java:62:  	o = null
			VALUE: null	 === null
			VALUE: o = null	 === null
..\OpenJMLDemo\src\openjml\demo\Paths.java:63:  	assert Assert o != null;
			VALUE: o	 === null
			VALUE: null	 === null
			VALUE: o != null	 === false
..\OpenJMLDemo\src\openjml\demo\Paths.java:63: warning: The prover cannot establish an assertion (Assert) in method testConstant
		//@ assert o != null;
		    ^
Completed proof of openjml.demo.Paths.testConstant(java.lang.Object) with prover z3_4_3 - with warnings
Completed proving methods in openjml.demo.Paths
15 warnings
